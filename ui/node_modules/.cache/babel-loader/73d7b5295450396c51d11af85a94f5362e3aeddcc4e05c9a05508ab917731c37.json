{"ast":null,"code":"var _jsxFileName = \"/Users/wonuolaabimbola/Desktop/spotify-artists-top-tracks/ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAccessToken, searchArtist, getArtistTopTracks } from './api/spotify';\nimport SearchBar from './components/SearchBar';\nimport TopTracksList from './components/TopTracksList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState('');\n  const [topTracks, setTopTracks] = useState([]);\n  useEffect(() => {\n    const fetchToken = async () => {\n      const token = await getAccessToken();\n      setToken(token);\n    };\n    fetchToken();\n  }, []);\n  const handleSearch = async query => {\n    if (!token) return;\n    try {\n      const artist = await searchArtist(token, query);\n      console.log('Artist:', artist); // Debugging line\n      if (artist) {\n        const tracks = await getArtistTopTracks(token, artist.id);\n        setTopTracks(tracks);\n      } else {\n        console.error('Artist not found');\n      }\n    } catch (error) {\n      console.error('Error fetching artist top tracks:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: true,\n      children: \"Spotify Artist Top Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopTracksList, {\n      tracks: topTracks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y61/DQIohA4kR1ZhFx52p35evGs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getAccessToken","searchArtist","getArtistTopTracks","SearchBar","TopTracksList","jsxDEV","_jsxDEV","App","_s","token","setToken","topTracks","setTopTracks","fetchToken","handleSearch","query","artist","console","log","tracks","id","error","children","class","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/Users/wonuolaabimbola/Desktop/spotify-artists-top-tracks/ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAccessToken, searchArtist, getArtistTopTracks } from './api/spotify';\nimport SearchBar from './components/SearchBar';\nimport TopTracksList from './components/TopTracksList';\n\nconst App = () => {\n  const [token, setToken] = useState('');\n  const [topTracks, setTopTracks] = useState([]);\n\n  useEffect(() => {\n    const fetchToken = async () => {\n      const token = await getAccessToken();\n      setToken(token);\n    };\n    fetchToken();\n  }, []);\n\n  const handleSearch = async (query) => {\n    if (!token) return;\n\n    try {\n      const artist = await searchArtist(token, query);\n      console.log('Artist:', artist); // Debugging line\n      if (artist) {\n        const tracks = await getArtistTopTracks(token, artist.id);\n        setTopTracks(tracks);\n      } else {\n        console.error('Artist not found');\n      }\n    } catch (error) {\n      console.error('Error fetching artist top tracks:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1 class>Spotify Artist Top Tracks</h1>\n      <SearchBar onSearch={handleSearch} />\n      <TopTracksList tracks={topTracks} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,YAAY,EAAEC,kBAAkB,QAAQ,eAAe;AAChF,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMJ,KAAK,GAAG,MAAMT,cAAc,CAAC,CAAC;MACpCU,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC;IACDI,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,IAAI,CAACN,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMO,MAAM,GAAG,MAAMf,YAAY,CAACQ,KAAK,EAAEM,KAAK,CAAC;MAC/CE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC,CAAC,CAAC;MAChC,IAAIA,MAAM,EAAE;QACV,MAAMG,MAAM,GAAG,MAAMjB,kBAAkB,CAACO,KAAK,EAAEO,MAAM,CAACI,EAAE,CAAC;QACzDR,YAAY,CAACO,MAAM,CAAC;MACtB,CAAC,MAAM;QACLF,OAAO,CAACI,KAAK,CAAC,kBAAkB,CAAC;MACnC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAIiB,KAAK;MAAAD,QAAA,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCrB,OAAA,CAACH,SAAS;MAACyB,QAAQ,EAAEd;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCrB,OAAA,CAACF,aAAa;MAACe,MAAM,EAAER;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACnB,EAAA,CApCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}